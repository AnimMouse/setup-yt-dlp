name: Setup yt-dlp
description: Setup/Install yt-dlp (a youtube-dl fork) for GitHub Actions
branding:
  icon: play-circle
  color: red
inputs:
  with-ffmpeg:
    description: Install yt-dlp/FFmpeg-Builds for yt-dlp
    default: false
  version:
    description: yt-dlp version
    default: latest
  token:
    description: GitHub token to avoid API rate limiting
    default: ${{ github.token }}
    
runs:
  using: composite
  steps:
    - name: Get yt-dlp/FFmpeg-Builds release ID for Linux
      id: yt-dlp-ffmpeg-release-id-unix-like
      if: inputs.with-ffmpeg == 'true' && (runner.os == 'Linux' || runner.os == 'macOS')
      shell: bash
      run: $GITHUB_ACTION_PATH/scripts/yt-dlp-ffmpeg/release-id/Linux.sh
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
        
    - name: Get yt-dlp/FFmpeg-Builds release ID for Windows
      id: yt-dlp-ffmpeg-release-id-windows
      if: inputs.with-ffmpeg == 'true' && runner.os == 'Windows'
      shell: pwsh
      run: '& $env:GITHUB_ACTION_PATH\scripts\yt-dlp-ffmpeg\release-id\Windows.ps1'
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
        
    - name: Restore yt-dlp/FFmpeg-Builds cache
      id: yt-dlp-FFmpeg-cache
      if: inputs.with-ffmpeg == 'true' && (runner.os == 'Linux' || runner.os == 'Windows')
      uses: actions/cache/restore@v4
      with:
        path: ${{ runner.tool_cache }}/yt-dlp-FFmpeg
        key: yt-dlp-FFmpeg-${{ steps.yt-dlp-ffmpeg-release-id-unix-like.outputs.release_id || steps.yt-dlp-ffmpeg-release-id-windows.outputs.release_id }}-${{ runner.os }}
        
    - name: Download yt-dlp/FFmpeg-Builds for Linux
      if: inputs.with-ffmpeg == 'true' && runner.os == 'Linux' && ! steps.yt-dlp-FFmpeg-cache.outputs.cache-hit
      shell: bash
      working-directory: ${{ runner.temp }}
      run: $GITHUB_ACTION_PATH/scripts/yt-dlp-ffmpeg/download/Linux.sh
      
    - name: Download yt-dlp/FFmpeg-Builds for Windows
      if: inputs.with-ffmpeg == 'true' && runner.os == 'Windows' && ! steps.yt-dlp-FFmpeg-cache.outputs.cache-hit
      shell: pwsh
      working-directory: ${{ runner.temp }}
      run: '& $env:GITHUB_ACTION_PATH\scripts\yt-dlp-ffmpeg\download\Windows.ps1'
      
    - name: Install yt-dlp/FFmpeg-Builds on tool cache
      if: inputs.with-ffmpeg == 'true' && (runner.os == 'Linux' || runner.os == 'Windows')
      uses: AnimMouse/tool-cache@v1
      with:
        folder_name: yt-dlp-FFmpeg
        cache_hit: ${{ steps.yt-dlp-FFmpeg-cache.outputs.cache-hit }}
        
    - name: Save yt-dlp/FFmpeg-Builds cache
      if: inputs.with-ffmpeg == 'true' && (runner.os == 'Linux' || runner.os == 'Windows') && ! steps.yt-dlp-FFmpeg-cache.outputs.cache-hit
      uses: actions/cache/save@v4
      with:
        path: ${{ runner.tool_cache }}/yt-dlp-FFmpeg
        key: yt-dlp-FFmpeg-${{ steps.yt-dlp-ffmpeg-release-id-unix-like.outputs.release_id || steps.yt-dlp-ffmpeg-release-id-windows.outputs.release_id }}-${{ runner.os }}
        
    - name: Get yt-dlp version for Unix-like
      id: version-unix-like
      if: runner.os == 'Linux' || runner.os == 'macOS'
      shell: bash
      run: $GITHUB_ACTION_PATH/scripts/version/Unix-like.sh
      env:
        version: ${{ inputs.version }}
        GITHUB_TOKEN: ${{ inputs.token }}
        
    - name: Get yt-dlp version for Windows
      id: version-windows
      if: runner.os == 'Windows'
      shell: pwsh
      run: '& $env:GITHUB_ACTION_PATH\scripts\version\Windows.ps1'
      env:
        version: ${{ inputs.version }}
        GITHUB_TOKEN: ${{ inputs.token }}
        
    - name: Restore yt-dlp cache
      id: cache
      uses: actions/cache/restore@v4
      with:
        path: ${{ runner.tool_cache }}/yt-dlp
        key: yt-dlp-${{ steps.version-unix-like.outputs.version || steps.version-windows.outputs.version }}-${{ runner.os }}
        
    - name: Download yt-dlp for Unix-like
      if: (runner.os == 'Linux' || runner.os == 'macOS') && ! steps.cache.outputs.cache-hit
      shell: bash
      working-directory: ${{ runner.temp }}
      run: $GITHUB_ACTION_PATH/scripts/download/Unix-like.sh
      env:
        version: ${{ steps.version-unix-like.outputs.version }}
        
    - name: Download yt-dlp for Windows
      if: runner.os == 'Windows' && ! steps.cache.outputs.cache-hit
      shell: pwsh
      working-directory: ${{ runner.temp }}
      run: '& $env:GITHUB_ACTION_PATH\scripts\download\Windows.ps1'
      env:
        version: ${{ steps.version-windows.outputs.version }}
        
    - name: Install yt-dlp on tool cache
      uses: AnimMouse/tool-cache@v1
      with:
        folder_name: yt-dlp
        cache_hit: ${{ steps.cache.outputs.cache-hit }}
        
    - name: Save yt-dlp cache
      if: '! steps.cache.outputs.cache-hit'
      uses: actions/cache/save@v4
      with:
        path: ${{ runner.tool_cache }}/yt-dlp
        key: yt-dlp-${{ steps.version-unix-like.outputs.version || steps.version-windows.outputs.version }}-${{ runner.os }}